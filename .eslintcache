[{"C:\\Users\\Dimitrie\\Documents\\Dimitrie\\Tiltseeker\\Tiltseeker_v2.0\\tiltseeker\\src\\index.js":"1","C:\\Users\\Dimitrie\\Documents\\Dimitrie\\Tiltseeker\\Tiltseeker_v2.0\\tiltseeker\\src\\App.js":"2","C:\\Users\\Dimitrie\\Documents\\Dimitrie\\Tiltseeker\\Tiltseeker_v2.0\\tiltseeker\\src\\serviceWorker.js":"3","C:\\Users\\Dimitrie\\Documents\\Dimitrie\\Tiltseeker\\Tiltseeker_v2.0\\tiltseeker\\src\\constants.js":"4","C:\\Users\\Dimitrie\\Documents\\Dimitrie\\Tiltseeker\\Tiltseeker_v2.0\\tiltseeker\\src\\components\\Navbar.js":"5","C:\\Users\\Dimitrie\\Documents\\Dimitrie\\Tiltseeker\\Tiltseeker_v2.0\\tiltseeker\\src\\pages\\BestBans.js":"6","C:\\Users\\Dimitrie\\Documents\\Dimitrie\\Tiltseeker\\Tiltseeker_v2.0\\tiltseeker\\src\\pages\\About.js":"7","C:\\Users\\Dimitrie\\Documents\\Dimitrie\\Tiltseeker\\Tiltseeker_v2.0\\tiltseeker\\src\\pages\\Home.js":"8","C:\\Users\\Dimitrie\\Documents\\Dimitrie\\Tiltseeker\\Tiltseeker_v2.0\\tiltseeker\\src\\pages\\DesktopApp.js":"9","C:\\Users\\Dimitrie\\Documents\\Dimitrie\\Tiltseeker\\Tiltseeker_v2.0\\tiltseeker\\src\\pages\\Donate.js":"10","C:\\Users\\Dimitrie\\Documents\\Dimitrie\\Tiltseeker\\Tiltseeker_v2.0\\tiltseeker\\src\\pages\\Tiltseek.js":"11","C:\\Users\\Dimitrie\\Documents\\Dimitrie\\Tiltseeker\\Tiltseeker_v2.0\\tiltseeker\\src\\pages\\CompChecker.js":"12","C:\\Users\\Dimitrie\\Documents\\Dimitrie\\Tiltseeker\\Tiltseeker_v2.0\\tiltseeker\\src\\components\\ProgressBar.js":"13","C:\\Users\\Dimitrie\\Documents\\Dimitrie\\Tiltseeker\\Tiltseeker_v2.0\\tiltseeker\\src\\Styling.js":"14","C:\\Users\\Dimitrie\\Documents\\Dimitrie\\Tiltseeker\\Tiltseeker_v2.0\\tiltseeker\\src\\utils\\WinRateCalc.js":"15","C:\\Users\\Dimitrie\\Documents\\Dimitrie\\Tiltseeker\\Tiltseeker_v2.0\\tiltseeker\\src\\GlobalContext.js":"16"},{"size":452,"mtime":1577920082295,"results":"17","hashOfConfig":"18"},{"size":5753,"mtime":1649664599613,"results":"19","hashOfConfig":"18"},{"size":4951,"mtime":499162500000,"results":"20","hashOfConfig":"18"},{"size":702,"mtime":1635306804734,"results":"21","hashOfConfig":"18"},{"size":6124,"mtime":1649664472475,"results":"22","hashOfConfig":"18"},{"size":12873,"mtime":1649733299834,"results":"23","hashOfConfig":"18"},{"size":3742,"mtime":1649733528960,"results":"24","hashOfConfig":"18"},{"size":6048,"mtime":1649644224370,"results":"25","hashOfConfig":"18"},{"size":2222,"mtime":1649733374187,"results":"26","hashOfConfig":"18"},{"size":8710,"mtime":1647410824187,"results":"27","hashOfConfig":"18"},{"size":29825,"mtime":1649724761348,"results":"28","hashOfConfig":"18"},{"size":8832,"mtime":1649733323597,"results":"29","hashOfConfig":"18"},{"size":1079,"mtime":1647504211697,"results":"30","hashOfConfig":"18"},{"size":3841,"mtime":1599341529229,"results":"31","hashOfConfig":"18"},{"size":4017,"mtime":1596333469447,"results":"32","hashOfConfig":"18"},{"size":113,"mtime":1647411722546,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"1o8a440",{"filePath":"37","messages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"39","messages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"41","messages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"36"},{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":21,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"36"},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"36"},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"36"},{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":25,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"36"},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"C:\\Users\\Dimitrie\\Documents\\Dimitrie\\Tiltseeker\\Tiltseeker_v2.0\\tiltseeker\\src\\index.js",[],["72","73"],"C:\\Users\\Dimitrie\\Documents\\Dimitrie\\Tiltseeker\\Tiltseeker_v2.0\\tiltseeker\\src\\App.js",["74"],"C:\\Users\\Dimitrie\\Documents\\Dimitrie\\Tiltseeker\\Tiltseeker_v2.0\\tiltseeker\\src\\serviceWorker.js",[],"C:\\Users\\Dimitrie\\Documents\\Dimitrie\\Tiltseeker\\Tiltseeker_v2.0\\tiltseeker\\src\\constants.js",[],"C:\\Users\\Dimitrie\\Documents\\Dimitrie\\Tiltseeker\\Tiltseeker_v2.0\\tiltseeker\\src\\components\\Navbar.js",["75"],"C:\\Users\\Dimitrie\\Documents\\Dimitrie\\Tiltseeker\\Tiltseeker_v2.0\\tiltseeker\\src\\pages\\BestBans.js",["76","77","78"],"C:\\Users\\Dimitrie\\Documents\\Dimitrie\\Tiltseeker\\Tiltseeker_v2.0\\tiltseeker\\src\\pages\\About.js",[],"C:\\Users\\Dimitrie\\Documents\\Dimitrie\\Tiltseeker\\Tiltseeker_v2.0\\tiltseeker\\src\\pages\\Home.js",[],"C:\\Users\\Dimitrie\\Documents\\Dimitrie\\Tiltseeker\\Tiltseeker_v2.0\\tiltseeker\\src\\pages\\DesktopApp.js",["79","80"],"C:\\Users\\Dimitrie\\Documents\\Dimitrie\\Tiltseeker\\Tiltseeker_v2.0\\tiltseeker\\src\\pages\\Donate.js",["81","82","83","84"],"import React from 'react'\r\nimport { StyleSheet, css } from 'aphrodite'\r\nimport { withRouter } from \"react-router-dom\"\r\n\r\nimport { FontSize, theme } from './../Styling.js'\r\n\r\nimport profilePic from './../images/profilePic.jpg'\r\nimport axiosRetry from 'axios-retry'\r\n\r\nvar stripe = window.Stripe(process.env.NODE_ENV == 'development' ? 'pk_test_bvpzFNK36siET1hGtZkQosZ0' : 'pk_live_n9tt3dAQE6pqrkzygut35k1Z')\r\n\r\n\r\nclass Donate extends React.Component {\r\n\r\n\tconstructor() {\r\n\t\tsuper()\r\n\t\tthis.state = {\r\n\t\t\tprice: null,\r\n\t\t\tpricePerHour: 1.5, // M10 Tier at 10 GB is $0.08 / hour\r\n\t\t\tsolventFor: null,\r\n\t\t\tdaysBought: null,\r\n\t\t}\r\n\t}\r\n\r\n\tasync componentDidMount() {\r\n\t\tthis.amountInput.select()\r\n\r\n\t\tvar params = new URLSearchParams(this.props.location.search)\r\n\t\tif (params.get('session_id')) {\r\n\t\t\tvar donation = (await this.props.axios({\r\n\t\t\t\tmethod: 'post',\r\n\t\t\t\turl: '/na1/submitDonation', \r\n\t\t\t\tdata: {\r\n\t\t\t\t\tsessionId: params.get('session_id')\r\n\t\t\t\t},\r\n\t\t\t})).data\r\n\t\t\tvar money = this.amtAfterFees(donation.session.amount_total)\r\n\t\t\tthis.setState({\r\n\t\t\t\tdaysBought: money / ( this.state.pricePerHour * 24 )\r\n\t\t\t})\r\n\t\t}\r\n\r\n\t\tvar donations = (await this.props.axios.get('/na1/getDonations'))?.data\r\n\t\tvar totalDonated = donations.reduce((sum, donation) => sum + this.amtAfterFees(donation.amount), 0)\r\n\t\tvar pricePerSecond = this.state.pricePerHour / (60 * 60)\r\n\t\tvar daysLeft = (((donations[0]?.paidAt ?? new Date().getTime() / 1000) + (totalDonated / pricePerSecond)) - (new Date().getTime() / 1000)) / (60 * 60 * 24)\r\n\t\tthis.setState({\r\n\t\t\tsolventFor: daysLeft\r\n\t\t})\r\n\t\tconsole.log(donations)\r\n\t\tconsole.log(totalDonated)\r\n\t}\r\n\r\n\tmakeDonation(amt) {\r\n\t\tstripe.redirectToCheckout({\r\n\t\t\titems: [{ \r\n\t\t\t\tsku: process.env.NODE_ENV == 'development' ? 'sku_GmMuGMGc8jTd4g' : 'sku_GmMK7lAi6vfMnN', quantity: parseInt(amt)\r\n\t\t\t}],\r\n\t\t\tsuccessUrl: window.location.origin + '/donate?session_id={CHECKOUT_SESSION_ID}',\r\n\t\t\tcancelUrl: window.location.origin + '/donate',\r\n\t\t})\r\n\t\t.then(function (result) {\r\n\t\t\tif (result.error) {\r\n\t\t\t\talert(result.error.message)\r\n\t\t\t}\r\n\t\t})\r\n\t}\r\n\r\n\tamtAfterFees(amt) {\r\n\t\treturn amt * 0.971 - 0.3\r\n\t}\r\n\r\n\trender() {\r\n\t\tloadStyles(this.props.theme)\r\n\r\n\t\tvar makeDonationButtons = () => {\r\n\t\t\tvar buttons = [1, 5, 10, 25, 50, 100].map((amt) => {\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<div\r\n\t\t\t\t\t\tclassName={css(styles.donateButtons)}\r\n\t\t\t\t\t\tonClick={() => this.makeDonation(amt)}\r\n\t\t\t\t\t\tkey={amt}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t{'$' + amt}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t)\r\n\t\t\t})\r\n\t\t\treturn (\r\n\t\t\t\t<div className={css(styles.donateButtonsContainer)}>\r\n\t\t\t\t\t{buttons}\r\n\t\t\t\t</div>\r\n\t\t\t)\r\n\t\t}\r\n\r\n\t\treturn (\r\n\t\t\t<div className={css(styles.container)}>\r\n\t\t\t\t<div className={css(styles.donationText)}>\r\n\t\t\t\t\t<div className={css(styles.daysLeft)} style={{ opacity: this.state.daysBought != null ? 1 : 0, height: this.state.daysBought != null ? 40 : 0 }}>\r\n\t\t\t\t\t\t{`Thank you for keeping Tiltseeker running for ${(this.state.daysBought)?.toFixed(2) ?? '...'} more days`}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<br/>\r\n\t\t\t\t\t<div className={css(styles.daysLeft)} style={{ opacity: this.state.solventFor != null ? 1 : 0, height: this.state.solventFor != null ? 40 : 0 }}>\r\n\t\t\t\t\t\t{`With a monthly cost of $${(this.state.pricePerHour * 24 * 30 / 100).toFixed(2)}, Tiltseeker has funds to run for ${(this.state.solventFor)?.toFixed(2) ?? '...'} days`}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<br/>\r\n\t\t\t\t\t<br/>\r\n\t\t\t\t\t{`Tiltseeker is a passion project that I work on in my spare time. It is run entirely off of donations provided by generous and passionate League of Legends players. If you'd like to help support me in keeping Tiltseeker's servers running, you can donate through the form below. All donations are one time payments only.`}\r\n\t\t\t\t\t<br/>\r\n\t\t\t\t\t<br/>\r\n\t\t\t\t\t<br/>\r\n\t\t\t\t\t<div style={{ margin: '0px 40px', textAlign: 'center' }}>\r\n\t\t\t\t\t\t{`I really hate ads, and your support in keeping Tiltseeker beautiful and ad free for everyone is greatly appreciated.`}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t{makeDonationButtons()}\r\n\t\t\t\t<div className={css(styles.amountContainer)}>\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\tclassName={css(styles.amountInput)}\r\n\t\t\t\t\t\tvalue={ this.state.price ? '$' + this.state.price : '' }\r\n\t\t\t\t\t\tonChange={(e) => this.setState({ price: e.target.value.split('.')[0].replace(/\\D/g,'') })}\r\n\t\t\t\t\t\tref={(me) => {this.amountInput = me}}\r\n\t\t\t\t\t\tonKeyDown={e => e.key === 'Enter' ? this.makeDonation(this.state.price) : null}\r\n\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\tname=\"amount\"\r\n\t\t\t\t\t\tplaceholder=\"$\"\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div\r\n\t\t\t\t\tclassName={css(styles.donateButton)}\r\n\t\t\t\t\tonClick={() => this.makeDonation(this.state.price)}\r\n\t\t\t\t>\r\n\t\t\t\t\tDonate\r\n\t\t\t\t</div>\r\n\t    </div>\r\n\t  );\r\n\t}\r\n}\r\n\r\nvar styles = null;\r\n\r\nvar loadStyles = (t) => {\r\n\tstyles = StyleSheet.create({\r\n\t\tcontainer: {\r\n\t\t\tbackgroundColor: theme('bg1', t),\r\n\t\t\ttransition: 'background-color 0.25s, color 0.25s',\r\n\t\t\tdisplay: 'flex',\r\n\t\t\talignItems: 'center',\r\n\t\t\tjustifyContent: 'center',\r\n\t\t\tflexDirection: 'column',\r\n\t\t\tflex: 1,\r\n\t\t},\r\n\t\tdaysLeft: {\r\n\t\t\tcolor: theme('text1', t),\r\n\t\t\t...FontSize.large,\r\n\t\t\tfontWeight: 'bold',\r\n\t\t\ttextAlign: 'center',\r\n\t\t\ttransition: 'background-color 0.25s, color 0.25s, opacity 1s, height 1s',\r\n\t\t},\r\n\t\tdonationText: {\r\n\t\t\tcolor: theme('text1', t),\r\n\t\t\t...FontSize.medium,\r\n\t\t\ttransition: 'background-color 0.25s, color 0.25s',\r\n\t\t\twidth: '80%',\r\n\t\t\t'@media (min-width: 700px)': {\r\n\t\t\t\twidth: '75%',\r\n\t\t\t},\r\n\t\t\t'@media (min-width: 900px)': {\r\n\t\t\t\twidth: '70%',\r\n\t\t\t},\r\n\t\t\t'@media (min-width: 1100px)': {\r\n\t\t\t\twidth: '65%',\r\n\t\t\t},\r\n\t\t},\r\n\t\tamountContainer: {\r\n\t\t\tpaddingTop: 25,\r\n\t\t\talignItems: 'center',\r\n\t\t\tjustifyContent: 'center',\r\n\t\t\tmaxWidth: 100,\r\n\t\t\twidth: '60%',\r\n\t\t\t'@media (min-width: 600px)': {\r\n\t\t\t\twidth: '50%',\r\n\t\t\t},\r\n\t\t\t'@media (min-width: 900px)': {\r\n\t\t\t\twidth: '40%',\r\n\t\t\t},\r\n\t\t\t'@media (min-width: 1300px)': {\r\n\t\t\t\twidth: '30%',\r\n\t\t\t},\r\n\t\t},\r\n\t\tamountInput: {\r\n\t\t\theight: 50,\r\n\t\t\tpaddingTop: '2%',\r\n\t\t\tpaddingBottom: '2%',\r\n\t\t\twidth: '100%',\r\n\t\t\tborderRadius: 10,\r\n\t\t\toutline: 'none',\r\n\t\t\tborderWidth: 2,\r\n\t\t\tborderStyle: 'solid',\r\n\t\t\tfontFamily: 'Montserrat',\r\n\t\t\ttextAlign: 'center',\r\n\t\t\t...FontSize.large,\r\n\t\t\ttransition: 'background-color 0.25s, border-color 0.25s, color 0.25s',\r\n\t\t\tcolor: theme('text2', t, true),\r\n\t\t\tborderColor: theme('inputHighlight', t, true),\r\n\t\t\tbackgroundColor: theme('primary1', t),\r\n\t\t\t':focus': {\r\n\t\t\t\tborderColor: theme('inputHighlight2', t, true),\r\n\t\t\t\tbackgroundColor: theme('inputHighlightBackground', t),\r\n\t\t\t},\r\n\t\t\t':hover': {\r\n\t\t\t\tborderColor: theme('inputHighlight2', t, true),\r\n\t\t\t\tbackgroundColor: theme('inputHighlightBackground', t),\r\n\t\t\t},\r\n\t\t\t'::selection': {\r\n\t\t\t\tbackgroundColor: '#CCC',\r\n\t\t\t},\r\n\t\t},\r\n\t\tdonateButton: {\r\n\t\t\tdisplay: 'flex',\r\n\t\t\tmarginBottom: 200,\r\n\t\t\talignItems: 'center',\r\n\t\t\tjustifyContent: 'center',\r\n\t\t\theight: 35,\r\n\t\t\t...FontSize.medium,\r\n\t\t\tminWidth: '40%',\r\n\t\t\t'@media (min-width: 600px)': {\r\n\t\t\t\tminWidth: '30%',\r\n\t\t\t},\r\n\t\t\t'@media (min-width: 900px)': {\r\n\t\t\t\tminWidth: '20%',\r\n\t\t\t},\r\n\t\t\t'@media (min-width: 1300px)': {\r\n\t\t\t\tminWidth: '15%',\r\n\t\t\t},\r\n\t\t\tmarginTop: 25,\r\n\t\t\tborderRadius: 10,\r\n\t\t\toutline: 'none',\r\n\t\t\tborderWidth: 2,\r\n\t\t\tborderStyle: 'solid',\r\n\t\t\ttransition: 'background-color 0.25s, border-color 0.25s, color 0.25s',\r\n\t\t\tcolor: theme('text2', t, false),\r\n\t\t\tborderColor: theme('buttonAccent', t, false),\r\n\t\t\tbackgroundColor: theme('button', t),\r\n\t\t\t':hover': {\r\n\t\t\t\tborderColor: theme('buttonHoveredAccent', t, false),\r\n\t\t\t\tbackgroundColor: theme('buttonHovered', t),\r\n\t\t\t\tcolor: theme('text2', t, true),\r\n\t\t\t\tcursor: 'pointer',\r\n\t\t\t}\r\n\t\t},\r\n\t\tdonateButtonsContainer: {\r\n\t\t\tdisplay: 'flex',\r\n\t\t\talignItems: 'stretch',\r\n\t\t\tjustifyContent: 'center',\r\n\t\t\toverflow: 'hidden',\r\n\t\t\theight: 35,\r\n\t\t\tmarginTop: 65,\r\n\t\t\tborderRadius: 10,\r\n\t\t\tborderWidth: 2,\r\n\t\t\tborderStyle: 'solid',\r\n\t\t\toutline: 'none',color: theme('text2', t, false),\r\n\t\t\tbackgroundColor: theme('buttonAccent', t, false),\r\n\t\t\tborderColor: theme('buttonAccent', t, false),\r\n\t\t\tminWidth: '60%',\r\n\t\t\t'@media (min-width: 600px)': {\r\n\t\t\t\tminWidth: '50%',\r\n\t\t\t},\r\n\t\t\t'@media (min-width: 900px)': {\r\n\t\t\t\tminWidth: '45%',\r\n\t\t\t},\r\n\t\t\t'@media (min-width: 1300px)': {\r\n\t\t\t\tminWidth: '40%',\r\n\t\t\t},\r\n\t\t},\r\n\t\tdonateButtons: {\r\n\t\t\t...FontSize.mediumSmall,\r\n\t\t\tflex: 1,\r\n\t\t\tdisplay: 'flex',\r\n\t\t\talignItems: 'center',\r\n\t\t\tjustifyContent: 'center',\r\n\t\t\tcolor: theme('text2', t, false),\r\n\t\t\tcursor: 'pointer',\r\n\t\t\tbackgroundColor: theme('button', t),\r\n\t\t\ttransition: 'background-color 0.15s, border-color 0.25s, color 0.25s',\r\n\t\t\t':hover': {\r\n\t\t\t\tborderColor: theme('buttonHoveredAccent', t, false),\r\n\t\t\t\tbackgroundColor: theme('buttonHovered', t),\r\n\t\t\t\tcolor: theme('accent3', t, true),\r\n\t\t\t\tcursor: 'pointer',\r\n\t\t\t},\r\n\t\t\t':active': {\r\n\t\t\t\tbackgroundColor: theme('buttonPressed', t),\r\n\t\t\t}\r\n\t\t},\r\n\t});\r\n}\r\n\r\n\r\nexport default withRouter(Donate);\r\n","C:\\Users\\Dimitrie\\Documents\\Dimitrie\\Tiltseeker\\Tiltseeker_v2.0\\tiltseeker\\src\\pages\\Tiltseek.js",["85","86","87","88","89","90","91","92","93","94","95","96","97","98","99","100","101","102","103","104","105"],"import React, { useState, useEffect, useContext } from 'react'\r\nimport { StyleSheet, css } from 'aphrodite'\r\nimport { withRouter, useHistory } from \"react-router-dom\"\r\nimport axios from 'axios'\r\nimport axiosRetry from 'axios-retry';\r\n\r\nimport GlobalContext from '../GlobalContext.js';\r\nimport ProgressBar from '../components/ProgressBar.js'\r\nimport { regionMap } from '../constants.js'\r\nimport { FontSize, ItemSize, theme } from '../Styling.js'\r\nimport WinRateCalc from '../utils/WinRateCalc'\r\n\r\naxiosRetry(axios, {\r\n\tretries: 3,\r\n\tretryDelay: axiosRetry.exponentialDelay,\r\n});\r\n\r\nconst matchesPerPlayer = 20\r\n\r\nfunction Tiltseek(props) {\r\n    const quotes = [\r\n        `\"Stats are good, winning is better\" - Faker... probably`,\r\n        `\"We'll use Tiltseeker for week 2 at Worlds\" - Every NA Team`,\r\n        `\"Please be our friend\" - Amumu`,\r\n        `\"Camp someone who flames as much as Brand\" - Bjergsen... probably`,\r\n        `\"Camp someone toxic. Like my sister, Cassiopeia\" - Katarina`,\r\n        `\"Would you like a tent?\" - Losing Midlaner`,\r\n        `\"Our midlaner has less vision than I do\" - Lee Sin`,\r\n        `\"With Tiltseeker, you can transform into something better\" - Kayn`,\r\n        `\"Camp someone who has no mana\" - Tyler1... maybe`,\r\n        `\"Keep camping. See what happens.\" - Someone you should keep camping`,\r\n        `\"Tiltseeker seems fair and balanced.\" - CertainlyT`,\r\n    ]\r\n\r\n    const { axios, globalTheme } = useContext(GlobalContext)\r\n    const history = useHistory()\r\n\r\n    const [ quote, setQuote ] = useState(quotes[Math.floor(Math.random() * quotes.length)])\r\n    const [ progress, setProgress ] = useState(0)\r\n    const [ stage, setStage ] = useState({ state: 'loading', error: '' })\r\n    const [ data, setData ] = useState({\r\n        region: (new URLSearchParams(window.location.search)).get('region'),\r\n        summonerName: (new URLSearchParams(window.location.search)).get('summonerName'),\r\n        desktop: (new URLSearchParams(window.location.search)).get('desktop'),\r\n    })\r\n    \r\n    const fetchData = async () => {\r\n        let newData = {}\r\n\r\n        const callStack = [{\r\n            progressPts: 1,\r\n            func: async ({ breakEarly }) => {\r\n                try {\r\n                    newData.userSummonerData = (await axios.get(`${data.region}/lol/summoner/v4/summoners/by-name/${data.summonerName}`))?.data\r\n                } catch (e) {\r\n                    if (e?.response?.status === 404) {\r\n                        setStage({ state: 'error', error: `An account with name \"${data.summonerName}\" does not exist. Make sure the region is correct!` })\r\n                        breakEarly()\r\n                    } else {\r\n                        throw e\r\n                    }\r\n                }\r\n            }\r\n        }, {\r\n            progressPts: 1,\r\n            func: async ({ breakEarly }) => {\r\n                try {\r\n                    newData.currentGame = (await axios.get(`${data.region}/lol/spectator/v4/active-games/by-summoner/${newData.userSummonerData.id}`)).data\r\n                } catch (e) {\r\n                    if (e?.response?.status === 404) {\r\n                        setStage({ state: 'error', error: `\"${data.summonerName}\" is not in game. Make sure the region is correct!` })\r\n                        breakEarly()\r\n                    } else {\r\n                        throw e\r\n                    }\r\n                }\r\n            }\r\n        }, {\r\n            progressPts: 10,\r\n            func: async ({ partialProgress, ptsAlloted }) => {\r\n                let i = 0\r\n                newData.accountInfos = await Promise.all(newData.currentGame.participants.map(async participant => {\r\n                    let summoner = (await axios.get(`${data.region}/lol/summoner/v4/summoners/${participant.summonerId}`)).data\r\n                    i += 1\r\n                    partialProgress(i / ptsAlloted)\r\n                    return summoner\r\n                }))\r\n            }\r\n        }, {\r\n            progressPts: 10,\r\n            func: async ({ partialProgress, ptsAlloted }) => {\r\n                let i = 0\r\n                newData.championMasteries = await Promise.all(newData.currentGame.participants.map(async participant => {\r\n                    let mastery = null\r\n                    try {\r\n                        mastery = (await axios.get(`${data.region}/lol/champion-mastery/v4/champion-masteries/by-summoner/${participant.summonerId}/by-champion/${participant.championId}`)).data\r\n                    } catch (e) {\r\n                        if (e?.response?.status !== 404) {\r\n                            throw e\r\n                        }\r\n                    }\r\n                    i += 1\r\n                    partialProgress(i / ptsAlloted)\r\n                    return mastery\r\n                }))\r\n            }\r\n        }, {\r\n            progressPts: 10,\r\n            func: async ({ partialProgress, ptsAlloted }) => {\r\n                let i = 0\r\n                newData.rankedInfo = await Promise.all(newData.currentGame.participants.map(async participant => {\r\n                    let ranked = null\r\n                    try {\r\n                        ranked = (await axios.get(`${data.region}/lol/league/v4/entries/by-summoner/${participant.summonerId}`)).data\r\n                    } catch (e) {\r\n                        if (e?.response?.status !== 404) {\r\n                            throw e\r\n                        }\r\n                    }\r\n                    i += 1\r\n                    partialProgress(i / ptsAlloted)\r\n                    return ranked\r\n                }))\r\n            }\r\n        }, {\r\n            progressPts: 10 * matchesPerPlayer,\r\n            func: async ({ partialProgress, ptsAlloted }) => {\r\n                let i = 0\r\n                newData.matchHistories = await Promise.all(newData.currentGame.participants.map(async (participant, playerNum) => {\r\n                    let matchIds = (await axios.get(`${regionMap[data.region]}/lol/match/v5/matches/by-puuid/${newData.accountInfos[playerNum].puuid}/ids?start=0&count=${matchesPerPlayer}&queue=420`)).data\r\n                    let matches = await Promise.all(matchIds.map(async matchId => {\r\n                        let match = (await axios.get(`${regionMap[data.region]}/lol/match/v5/matches/${matchId}`)).data\r\n                        i += 1\r\n                        partialProgress(i / ptsAlloted)\r\n                        return match\r\n                    }))\r\n                    i += matchesPerPlayer - matches.length\r\n                    return matches\r\n                }))\r\n            }\r\n        }, {\r\n            progressPts: 1,\r\n            func: async () => {\r\n                newData.currentGameVersion = (await axios.get(`https://ddragon.leagueoflegends.com/api/versions.json`)).data[0]\r\n            }\r\n        }, {\r\n            progressPts: 1,\r\n            func: async () => {\r\n                newData.championData = (await axios.get(`https://ddragon.leagueoflegends.com/cdn/${newData.currentGameVersion}/data/en_US/champion.json`)).data.data\r\n                for (let champ of Object.values(newData.championData)) {\r\n                    newData.championData[champ.key] = champ\r\n                }\r\n            }\r\n        }, {\r\n            progressPts: 1,\r\n            func: async () => {\r\n                newData.champStats = {}\r\n                let res = (await axios.get(`na/stats`)).data\r\n                for (let champ of res.champStats) {\r\n                    newData.champStats[champ._id] = champ\r\n                }\r\n                newData.detailedChampStats = res.detailedChampStats\r\n                newData.matchups = res.matchups\r\n            }\r\n        }]\r\n\r\n        const calcProgressToPoint = (i, currPercent = 1) => {\r\n            let total = callStack.reduce((total, curr) => total + curr.progressPts, 0)\r\n            return ( callStack.slice(0, i).reduce((total, curr) => total + curr.progressPts, 0) + currPercent * callStack[i].progressPts ) / total\r\n        }\r\n\r\n        let loadedSuccessfully = false\r\n        for (let [ i, call ] of callStack.entries()) {\r\n            let shouldStop = false\r\n            await call.func({\r\n                partialProgress: (percent) => setProgress(calcProgressToPoint(i, percent)),\r\n                breakEarly: () => shouldStop = true,\r\n                ptsAlloted: call.progressPts\r\n            })\r\n            if (!call.usesPartialProgress) {\r\n                setProgress(calcProgressToPoint(i))\r\n            }\r\n            if (shouldStop) {\r\n                break\r\n            }\r\n            if (i == callStack.length - 1) {\r\n                loadedSuccessfully = true\r\n            }\r\n        }\r\n\r\n        console.log(newData)\r\n\r\n        setData({\r\n            ...data,\r\n            ...newData\r\n        })\r\n        if (loadedSuccessfully) {\r\n            setStage({ state: 'loaded' })\r\n        }\r\n    }\r\n\r\n    useEffect(() => {(async () => {\r\n        await fetchData()\r\n    })()}, [])\r\n    loadStyles(globalTheme)\r\n\r\n    return (\r\n        <div className={css(styles.container, data.desktop ? styles.containerDesktop : undefined)}>\r\n            { stage.state == 'loading' ? (\r\n                <>\r\n                    <div className={css(styles.loadingText)}>\r\n                        {quote}\r\n                    </div>\r\n                    <ProgressBar\r\n                        percent={progress}\r\n                        theme={globalTheme}\r\n                    />\r\n                </>\r\n            ) : null }\r\n            { stage.state == 'loaded' ? (\r\n                <DataDisplay data={data}/>\r\n            ) : null }\r\n            { stage.state == 'error' ? (\r\n                <>\r\n                    <div className={css(styles.errContainer)}>\r\n                        <div className={css(styles.errText)}>\r\n                            { stage.error }\r\n                        </div>\r\n                    </div>\r\n                    <div className={css(styles.tryAgainButton)}>\r\n                        <div\r\n                            className={css(styles.tryAgainText)}\r\n                            onClick={() => history.push('/')}\r\n                        >\r\n                            {'Back'}\r\n                        </div>\r\n                    </div>\r\n                </>\r\n            ) : null }\r\n\t    </div>\r\n    );\r\n}\r\n\r\nfunction DataDisplay(props) {\r\n\r\n    const { globalTheme } = useContext(GlobalContext)\r\n\r\n    let { data } = props\r\n\r\n    const [ teams, setTeams ] = useState(0)\r\n\r\n    let setPopupText = (txt, mouse) => {\r\n        document.querySelector('#infoBoxContainer').style.display = txt ? 'flex' : 'none'\r\n        document.querySelector('#infoBoxContainer').style.top = `${mouse.clientY + 20}px`\r\n        document.querySelector('#infoBoxContainer').style.left = `${mouse.clientX + 3}px`\r\n        document.querySelector('#infoBox').innerText = txt\r\n    }\r\n\r\n\r\n\tlet getPercentile = (val, avg, variance) => {\r\n        let std = variance ** 0.5\r\n\t\tvar getZPercentile = (z) => {\r\n\r\n\t\t\t// z == number of standard deviations from the mean\r\n\r\n\t\t\t// if z is greater than 6.5 standard deviations from the mean the\r\n\t\t\t// number of significant digits will be outside of a reasonable range\r\n\r\n\t\t\tif (z < -6.5) {\r\n\t\t\t\treturn 0.0;\r\n\t\t\t}\r\n\r\n\t\t\tif (z > 6.5) {\r\n\t\t\t\treturn 1.0;\r\n\t\t\t}\r\n\r\n\t\t\tvar factK = 1;\r\n\t\t\tvar sum = 0;\r\n\t\t\tvar term = 1;\r\n\t\t\tvar k = 0;\r\n\t\t\tvar loopStop = Math.exp(-23);\r\n\r\n\t\t\twhile(Math.abs(term) > loopStop) {\r\n\t\t\t\tterm = .3989422804 * Math.pow(-1,k) * Math.pow(z,k) / (2 * k + 1) / Math.pow(2,k) * Math.pow(z,k+1) / factK;\r\n\t\t\t\tsum += term;\r\n\t\t\t\tk++;\r\n\t\t\t\tfactK *= k;\r\n\t\t\t}\r\n\r\n\t\t\tsum += 0.5;\r\n\r\n\t\t\treturn sum;\r\n\t\t}\r\n\r\n\t\treturn getZPercentile((val-avg)/std)\r\n\t}\r\n\r\n    let getPlayerPercentile = (player, trait) => {\r\n        let [ playerData, playerNum ] = player\r\n        if (!data.matchHistories[playerNum]) {\r\n            return 0.5\r\n        }\r\n        let percentiles = []\r\n        for (let match of data.matchHistories[playerNum]) {\r\n            let participant = match.info.participants.filter(p => p.summonerId === playerData.summonerId)[0]\r\n            let champId = participant.championId\r\n            let traitWithoutTime = trait.split('PerSec')[0]\r\n            percentiles.push(getPercentile(\r\n                trait === traitWithoutTime ? participant[trait] : participant[traitWithoutTime] / participant.timePlayed,\r\n                data.detailedChampStats?.[champId]?.[`${trait}Avg`],\r\n                (data.detailedChampStats?.[champId]?.[`${trait}Variance`]) * (trait === traitWithoutTime ? 1 : data.detailedChampStats?.[champId]?.timePlayedAvg)\r\n            ))\r\n        }\r\n        return percentiles\r\n    }\r\n\r\n\r\n\tlet calcLosingStreak = (player, numeric=false) => {\r\n        let [ playerData, playerNum ] = player\r\n\t\tlet streak = 0\r\n\t\tlet history = data.matchHistories[playerNum]\r\n\t\tlet lastGameTime = Date.now()\r\n\t\tfor (let match of history) {\r\n\t\t\tlet win = match.info.participants.filter(participant => {\r\n\t\t\t\treturn participant.summonerId == playerData.summonerId\r\n\t\t\t})[0].win\r\n\t\t\tif (win || lastGameTime - match.gameCreation < 12 * 60 * 60 * 1000) {\r\n                break\r\n\t\t\t}\r\n            streak += 1\r\n            lastGameTime = match.gameCreation\r\n\t\t}\r\n\t\treturn streak\r\n\t}\r\n\r\n\tlet calcWinRate = (player, numeric=false) => {\r\n\t\tvar i = player[1]\r\n\t\tvar rankedInfo = data.rankedInfo[i]\r\n\t\tvar wins = rankedInfo.reduce((total, current) => {\r\n\t\t\treturn total += current.wins\r\n\t\t}, 0)\r\n\t\tvar losses = rankedInfo.reduce((total, current) => {\r\n\t\t\treturn total += current.losses\r\n\t\t}, 0)\r\n\t\tif (wins != 0 || losses != 0) {\r\n\t\t\tvar winRate = 100*wins/(wins+losses)\r\n\t\t\tif (numeric) {\r\n\t\t\t\treturn winRate/100\r\n\t\t\t}\r\n\t\t\treturn `${winRate.toFixed(1)}% (${wins}W/${losses}L)`\r\n\t\t} else {\r\n\t\t\tif (numeric) {\r\n\t\t\t\treturn null\r\n\t\t\t}\r\n\t\t\treturn 'not ranked'\r\n\t\t}\r\n\t}\r\n\r\n\tlet calcMasteryPoints = (player, numeric=false) => {\r\n\t\tif (data.championMasteries[player[1]]) {\r\n\t\t\tif (numeric) {\r\n\t\t\t\treturn data.championMasteries[player[1]].championPoints\r\n\t\t\t}\r\n\t\t\treturn data.championMasteries[player[1]].championPoints.toLocaleString()\r\n\t\t} else {\r\n\t\t\treturn 0\r\n\t\t}\r\n\t}\r\n\r\n\tlet calcLastPlayed = (player, numeric=false) => {\r\n\t\tif (data.championMasteries[player[1]]) {\r\n\t\t\tvar timeSince = ((Date.now() - data.championMasteries[player[1]].lastPlayTime)/(24 * 60 * 60 *1000))\r\n\t\t\tif (numeric) {\r\n\t\t\t\treturn timeSince\r\n\t\t\t}\r\n\t\t\treturn `${timeSince.toFixed(0)} day${timeSince.toFixed(0) === '1' ? '' : 's'} ago`\r\n\t\t} else {\r\n\t\t\tif (numeric) {\r\n\t\t\t\treturn null\r\n\t\t\t}\r\n\t\t\treturn 'never'\r\n\t\t}\r\n\t}\r\n\r\n\tlet calcAggression = (player, numeric=false) => {\r\n        let [ playerData, playerNum ] = player\r\n        let dealtPercentiles = getPlayerPercentile(player, 'totalDamageDealtToChampionsPerSec')\r\n        let dealt = dealtPercentiles.reduce((total, percent) => total + percent, 0) / dealtPercentiles.length\r\n        let receivedPercentiles = getPlayerPercentile(player, 'totalDamageTakenPerSec')\r\n        let received = receivedPercentiles.reduce((total, percent) => total + percent, 0) / receivedPercentiles.length\r\n        let percent = (dealt + received) / 2\r\n        if ([playerData.spell1Id, playerData.spell2Id].includes(11 /* SMITE */)) {\r\n\t\t    percent = dealt // ignore received for junglers because of monster damage\r\n        }\r\n        if (dealtPercentiles.length === 0 || receivedPercentiles.length === 0) {\r\n            return null\r\n        }\r\n\t\tif (numeric) {\r\n\t\t\treturn percent\r\n\t\t}\r\n\t\treturn `${(100 * percent).toFixed(0)}%${dealtPercentiles.length + receivedPercentiles.length < matchesPerPlayer ? ' ?' : ''}`\r\n\t}\r\n\r\n\tlet calcWarding = (player, numeric=false) => {\r\n\t\tlet visionPercentiles = getPlayerPercentile(player, 'visionScorePerSec')\r\n        let vision = visionPercentiles.reduce((total, percent) => total + percent, 0) / visionPercentiles.length\r\n        if (visionPercentiles.length === 0) {\r\n            return null\r\n        }\r\n\t\tif (numeric) {\r\n\t\t\treturn vision\r\n\t\t}\r\n\t\treturn `${(100 * vision).toFixed(0)}%${visionPercentiles.length < matchesPerPlayer ? ' ?' : ''}`\r\n\t}\r\n\r\n\tlet calcTiltScore = (player) => {\r\n\t\tvar tiltArr = []\r\n\r\n\t\tvar losingStreak = calcLosingStreak(player, true)\r\n\t\tif (losingStreak !== null) {\r\n\t\t\ttiltArr.push(1 - 1/(Math.pow(2,losingStreak)))\r\n\t\t}\r\n\r\n\t\tvar winRate = calcWinRate(player, true)\r\n\t\tif (winRate !== null) {\r\n\t\t\ttiltArr.push(1 - winRate)\r\n\t\t}\r\n\r\n\t\tvar masteryPoints = calcMasteryPoints(player, true)\r\n\t\tif (masteryPoints !== null) {\r\n\t\t\ttiltArr.push(1/(Math.pow(2,masteryPoints/7000)))\r\n\t\t}\r\n\r\n\t\tvar lastPlayed = calcLastPlayed(player, true)\r\n\t\tif (lastPlayed !== null) {\r\n\t\t\ttiltArr.push(1 - 1/(Math.pow(2,lastPlayed/matchesPerPlayer)))\r\n\t\t} else {\r\n\t\t\ttiltArr.push(1)\r\n\t\t}\r\n\r\n\t\tvar aggression = calcAggression(player, true)\r\n\t\tif (aggression !== null) {\r\n\t\t\ttiltArr.push(aggression)\r\n\t\t}\r\n\r\n\t\tvar warding = calcWarding(player, true)\r\n\t\tif (warding !== null) {\r\n\t\t\ttiltArr.push(1 - warding)\r\n\t\t}\r\n\r\n\t\tif (tiltArr.length >= 5) {\r\n\t\t\tvar tiltScore = 100 * tiltArr.reduce((prev, curr) => prev + curr) / tiltArr.length\r\n\t\t\treturn `${tiltScore.toFixed(1)}%`\r\n\t\t} else {\r\n\t\t\treturn 'not enough data'\r\n\t\t}\r\n\t}\r\n\r\n\tlet makeTeam = (team) => {\r\n\t\tlet playerDisplay = team.map(player => (\r\n\t\t\t<div className={css(styles.playerDisplayContainer)} key={`${player[0].summonerName}-player-display`}>\r\n\t\t\t\t<div className={css(styles.championIconContainer)}>\r\n\t\t\t\t\t<img\r\n\t\t\t\t\t\tclassName={css(styles.championIcon)}\r\n\t\t\t\t\t\tsrc={\r\n\t\t\t\t\t\t\t'https://ddragon.leagueoflegends.com/cdn/' +\r\n\t\t\t\t\t\t\tdata.currentGameVersion + '/img/champion/' +\r\n\t\t\t\t\t\t\tdata.championData[`${player[0].championId}`].id +\r\n\t\t\t\t\t\t\t'.png'\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t{player[0].summonerName}\r\n\t\t\t\t</div>\r\n\t\t\t\t{[\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tfunc: calcLosingStreak,\r\n\t\t\t\t\t\tdesc: 'Number of games a player has lost consecutively with no greater than a 12 hour break between games.'\r\n                    },\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tfunc: calcWinRate,\r\n\t\t\t\t\t\tdesc: 'Winrate in ranked games played this season.'\r\n                    },\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tfunc: calcMasteryPoints,\r\n\t\t\t\t\t\tdesc: 'Mastery points on the currently played champion.'\r\n                    },\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tfunc: calcLastPlayed,\r\n\t\t\t\t\t\tdesc: 'The last time the player used their current champion.'\r\n                    },\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tfunc: calcAggression,\r\n\t\t\t\t\t\tdesc: 'A percentile representing how aggressive a player is on their current champion compared to other players on the same champion. A low aggression Darius may still be somewhat aggressive and a highly aggressive Soraka may still be somewhat passive.'\r\n                    },\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tfunc: calcWarding,\r\n\t\t\t\t\t\tdesc: 'A percentile representing how effectively a player wards on their current champion compared to other players on the same champion. A low warding Janna may still place more wards than the average player, because Jannas tend to ward a lot.'\r\n                    },\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tfunc: calcTiltScore,\r\n\t\t\t\t\t\tdesc: 'An aggregate of all data collected into a score representing the likely benefit of camping/focusing this player.'\r\n                    },\r\n\t\t\t\t].map((data, i) => (\r\n\t\t\t\t\t<div\r\n                        key={`${player[0].summonerName}-${i}-data-cell`}\r\n\t\t\t\t\t\tclassName={css(styles.field)}\r\n\t\t\t\t\t\tstyle={{ backgroundColor: i % 2 == 0 ? theme('primary2', globalTheme) : null }}\r\n\t\t\t\t\t\tonMouseMove={(e) => setPopupText(data.desc, e)}\r\n\t\t\t\t\t\tonMouseLeave={(e) => setPopupText(null, e)}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t{data.func(player) ?? 'not enough data'}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t))}\r\n\t\t\t</div>\r\n\t\t))\r\n\r\n\t\tlet titles = [\r\n\t\t\t'Losing Streak',\r\n\t\t\t'Ranked Win Rate',\r\n\t\t\t'Mastery Points',\r\n\t\t\t'Last Played',\r\n\t\t\t'Aggression',\r\n\t\t\t'Warding',\r\n\t\t\t'Tilt Score'\r\n\t\t].map((title, i) => (\r\n\t\t\t<div className={css(styles.fieldTitle)} key={`title-${i}`} style={{ backgroundColor: i % 2 == 0 ? theme('primary2', globalTheme) : null }}>\r\n\t\t\t\t{title}\r\n\t\t\t</div>\r\n\t\t))\r\n\r\n\t\tlet dmgMagic = 0\r\n\t\tlet dmgPhysical = 0\r\n\t\tlet dmgTrue = 0\r\n\t\tlet dmgTotal = 0\r\n\r\n\t\tteam.forEach(player => {\r\n            let [ playerData, playerNum ] = player\r\n\t\t\tdmgMagic += data.detailedChampStats[playerData.championId]?.magicDamageDealtToChampionsPerSecAvg ?? 0\r\n\t\t\tdmgPhysical += data.detailedChampStats[playerData.championId]?.physicalDamageDealtToChampionsPerSecAvg ?? 0\r\n\t\t\tdmgTrue += data.detailedChampStats[playerData.championId]?.trueDamageDealtToChampionsPerSecAvg ?? 0\r\n\t\t\tdmgTotal += data.detailedChampStats[playerData.championId]?.magicDamageDealtToChampionsPerSecAvg ?? 0\r\n\t\t\tdmgTotal += data.detailedChampStats[playerData.championId]?.physicalDamageDealtToChampionsPerSecAvg ?? 0\r\n\t\t\tdmgTotal += data.detailedChampStats[playerData.championId]?.trueDamageDealtToChampionsPerSecAvg ?? 0\r\n\t\t})\r\n\r\n        let probabilityInput = data.currentGame.participants.reduce((carry, participant, i) => {\r\n            carry[participant.teamId === 100 ? 'allyTeam' : 'opponentTeam']['picks'][i] = { championId: participant.championId }\r\n            return carry\r\n        }, {\r\n            allyTeam: {\r\n                picks: {}\r\n            },\r\n            opponentTeam: {\r\n                picks: {}\r\n            }\r\n        })\r\n\r\n        let probabilityData = WinRateCalc.calcProbability(probabilityInput, { matchups: data.matchups })\r\n        let predictedWinRate = probabilityData.probability || 0.5\r\n        let totalSamples = probabilityData.totalSamples\r\n\r\n        let blueSideWR = `${(100 * predictedWinRate).toFixed(1)}%${totalSamples < 100_000 ? ' ?' : ''}`\r\n        let redSideWR = `${(100 * (1 - predictedWinRate)).toFixed(1)}%${totalSamples < 100_000 ? ' ?' : ''}`\r\n\r\n        let teamColor = team ? (team[0][0].teamId == 100 ? theme('accent3', globalTheme) : theme('accent4', globalTheme)) : ''\r\n\r\n\t\treturn (\r\n\t\t\t<div\r\n\t\t\t\tclassName={css(styles.teamContainer)}\r\n\t\t\t>\r\n\t\t\t\t<div style={{ flex: 1 }}/>\r\n\t\t\t\t<div className={css(styles.teamWrapper)}>\r\n\t\t\t\t\t<div\r\n\t\t\t\t\t\tclassName={css(styles.teamSide)}\r\n\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\tcolor: teamColor,\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t{team.length > 0 ? (team[0][0].teamId == 100 ? `BLUE SIDE` : `RED SIDE`) : ''}\r\n\t\t\t\t\t</div>\r\n                    <div\r\n                        className={css(styles.oddsOfWinning)}\r\n                        style={{\r\n\t\t\t\t\t\t\tcolor: teamColor,\r\n\t\t\t\t\t\t}}\r\n                        onMouseMove={(e) => setPopupText(`Odds of this team winning.`, e)}\r\n\t\t\t\t\t\tonMouseLeave={(e) => setPopupText(null, e)}\r\n                    >\r\n                        {team.length > 0 ? (team[0][0].teamId == 100 ? `${blueSideWR}` : `${redSideWR}`) : ''}\r\n                    </div>\r\n\t\t\t\t\t<div\r\n                        className={css(styles.damageContainer)}\r\n                        onMouseMove={(e) => setPopupText(`Estimated damage type ratio of this team.`, e)}\r\n\t\t\t\t\t\tonMouseLeave={(e) => setPopupText(null, e)}\r\n                    >\r\n\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\tclassName={css(styles.damageBarComponent)}\r\n\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\tflex: dmgMagic/dmgTotal,\r\n\t\t\t\t\t\t\t\tbackgroundColor: theme('accent3', globalTheme),\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t{`${(100*dmgMagic/dmgTotal).toFixed(1)}% AP`}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\tclassName={css(styles.damageBarComponent)}\r\n\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\tflex: dmgPhysical/dmgTotal,\r\n\t\t\t\t\t\t\t\tbackgroundColor: theme('accent4', globalTheme),\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t{`${(100*dmgPhysical/dmgTotal).toFixed(1)}% AD`}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\tclassName={css(styles.damageBarComponent)}\r\n\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\tflex: dmgTrue/dmgTotal,\r\n\t\t\t\t\t\t\t\tbackgroundColor: '#fbfbfb',\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t{`${(100*dmgTrue/dmgTotal).toFixed(1)}%`}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className={css(styles.fieldsContainer)}>\r\n\t\t\t\t\t\t<div style={{ width: 105 }}/>\r\n\t\t\t\t\t\t{titles}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t{playerDisplay}\r\n\t\t\t\t</div>\r\n\t\t\t\t<div style={{ flex: 2 }}/>\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n\r\n\r\n    loadStyles(globalTheme)\r\n\r\n    var team1 = data.currentGame.participants.map((participant, index) => {\r\n        return [participant, index]\r\n    }).filter(participant => participant[0].teamId == 100)\r\n    var team2 = data.currentGame.participants.map((participant, index) => {\r\n        return [participant, index]\r\n    }).filter(participant => participant[0].teamId == 200)\r\n\r\n    return (\r\n        <div className={css(styles.dataDisplayContainer)}>\r\n            <div\r\n                id='infoBoxContainer'\r\n                className={css(styles.infoBoxContainer)}\r\n                style={{ display: 'none' }}\r\n            >\r\n                <div id='infoBox' className={css(styles.infoBox)}/>\r\n            </div>\r\n            {makeTeam(team1)}\r\n            {makeTeam(team2)}\r\n        </div>\r\n    );\r\n}\r\n\r\nvar styles = null;\r\n\r\nvar loadStyles = (t) => {\r\n\tstyles = StyleSheet.create({\r\n\t\tcontainer: {\r\n\t\t\tbackgroundColor: theme('bg1', t),\r\n\t\t\ttransition: 'background-color 0.25s, color 0.25s',\r\n\t\t\tdisplay: 'flex',\r\n\t\t\tflexDirection: 'column',\r\n\t\t\tflex: 1,\r\n\t\t\talignItems: 'center',\r\n\t  },\r\n\t\tcontainerDesktop: {\r\n\t\t\tbackgroundColor: 'rgba(0.5,0.5,0.5,0.01)',\r\n\t\t\tuserSelect: 'none',\r\n\t\t},\r\n\t\tloadingText: {\r\n\t\t\tcolor: theme('text1', t),\r\n\t\t\ttextAlign: 'center',\r\n\t\t\tpaddingLeft: 20,\r\n\t\t\tpaddingRight: 20,\r\n\t\t\ttransition: 'background-color 0.25s, color 0.25s',\r\n\t\t\tmarginTop: 200,\r\n\t\t\tmarginBottom: 50,\r\n\t\t\t...FontSize.large,\r\n\t\t},\r\n\t\terrContainer: {\r\n\t\t\tmargin: '200px 20px 50px 20px',\r\n\t\t\tborderRadius: 20,\r\n\t\t\tborderWidth: 8,\r\n\t\t\tborderStyle: 'solid',\r\n\t\t\tborderColor: theme('accent1', t, true),\r\n\t\t\tdisplay: 'flex',\r\n\t\t\tbackgroundColor: theme('primary1', t),\r\n\t\t\talignItems: 'center',\r\n\t\t\tjustifyContent: 'center',\r\n\t\t\ttransition: 'background-color 0.25s, color 0.25s, border-color 0.25s',\r\n\t\t},\r\n\t\terrText: {\r\n\t\t\t...FontSize.large,\r\n\t\t\tcolor: theme('text1', t),\r\n\t\t\tpadding: '40px 25px',\r\n\t\t\ttransition: 'background-color 0.25s, color 0.25s, border-color 0.25s',\r\n\t\t},\r\n\t\ttryAgainButton: {\r\n\t\t\tborderRadius: 5,\r\n\t\t\tborderWidth: 2,\r\n\t\t\tborderStyle: 'solid',\r\n\t\t\tborderColor: theme('accent1', t, true),\r\n\t\t\tdisplay: 'flex',\r\n\t\t\tbackgroundColor: theme('primary1', t),\r\n\t\t\talignItems: 'center',\r\n\t\t\tjustifyContent: 'center',\r\n\t\t\ttransition: 'background-color 0.25s, color 0.25s, border-color 0.25s',\r\n\t\t\t':hover': {\r\n\t\t\t\tborderColor: theme('inputHighlight2', t, true),\r\n\t\t\t\tbackgroundColor: theme('inputHighlightBackground', t),\r\n\t\t\t\tcursor: 'pointer',\r\n\t\t\t},\r\n\t\t},\r\n\t\ttryAgainText: {\r\n\t\t\t...FontSize.medium,\r\n\t\t\tcolor: theme('text1', t),\r\n\t\t\tpadding: '10px 15px',\r\n\t\t\ttransition: 'background-color 0.25s, color 0.25s, border-color 0.25s',\r\n\t\t},\r\n\t\tdataDisplayContainer: {\r\n\t\t\t...FontSize.mediumSmall,\r\n\t\t\tdisplay: 'flex',\r\n\t\t\talignSelf: 'stretch',\r\n\t\t\tflex: 1,\r\n\t\t\tflexWrap: 'wrap',\r\n\t\t\tjustifyContent: 'space-evenly',\r\n\t\t},\r\n\t\tteamContainer: {\r\n\t\t\tdisplay: 'flex',\r\n\t\t\tflexDirection: 'column',\r\n\t\t\t...ItemSize.large,\r\n\t\t\tjustifyContent: 'center',\r\n\t\t},\r\n\t\tteamWrapper: {\r\n\t\t\tborderStyle: 'solid',\r\n\t\t\tborderWidth: 5,\r\n\t\t\tborderRadius: 10,\r\n\t\t\tborderColor: theme('inputHighlight', t, true),\r\n\t\t\tbackgroundColor: theme('primary1', t),\r\n\t\t\ttransition: 'background-color 0.25s, border-color 0.25s, color 0.25s',\r\n\t\t\tdisplay: 'flex',\r\n\t\t\tflexDirection: 'column',\r\n\t\t\tmarginTop: 25,\r\n\t\t},\r\n\t\tplayerDisplayContainer: {\r\n\t\t\tdisplay: 'flex',\r\n\t\t\theight: '8vh',\r\n\t\t\tborderColor: theme('inputHighlight', t, true),\r\n\t\t\ttransition: 'background-color 0.25s, border-color 0.25s, color 0.25s',\r\n\t\t\tborderStyle: 'solid',\r\n\t\t\tborderWidth: '2px 0px 0px 0px',\r\n\t\t},\r\n\t\tchampionIconContainer: {\r\n\t\t\tdisplay: 'flex',\r\n\t\t\tflexDirection: 'column',\r\n\t\t\talignItems: 'center',\r\n\t\t\tjustifyContent: 'center',\r\n\t\t\twordBreak: 'break-all',\r\n\t\t\ttextAlign: 'center',\r\n\t\t\theight: '8vh',\r\n\t\t\twidth: 105,\r\n\t\t\t...FontSize.small,\r\n\t\t\tcolor: theme('text1', t),\r\n\t\t\ttransition: 'background-color 0.25s, border-color 0.25s, color 0.25s',\r\n\t\t},\r\n\t\tchampionIcon: {\r\n\t\t\theight: '5vh',\r\n\t\t\twidth: '5vh',\r\n\t\t\tborderRadius: 5,\r\n\t\t},\r\n\t\tfieldsContainer: {\r\n\t\t\tdisplay: 'flex',\r\n\t\t\theight: 50,\r\n\t\t\tborderColor: theme('inputHighlight', t, true),\r\n\t\t\ttransition: 'background-color 0.25s, border-color 0.25s, color 0.25s',\r\n\t\t\tborderStyle: 'solid',\r\n\t\t\tborderWidth: '2px 0px 0px 0px',\r\n\t\t},\r\n\t\tfieldTitle: {\r\n\t\t\tdisplay: 'flex',\r\n\t\t\tflex: 1,\r\n\t\t\talignItems: 'center',\r\n\t\t\tjustifyContent: 'center',\r\n\t\t\ttextAlign: 'center',\r\n\t\t\twordBreak: 'break-word',\r\n\t\t\tcolor: theme('text1', t),\r\n\t\t\ttransition: 'background-color 0.25s, border-color 0.25s, color 0.25s',\r\n\t\t\tmarginTop: 0.5,\r\n\t\t},\r\n\t\tfield: {\r\n\t\t\tdisplay: 'flex',\r\n\t\t\tflex: 1,\r\n\t\t\tpadding: '0px 8px',\r\n\t\t\talignItems: 'center',\r\n\t\t\tjustifyContent: 'center',\r\n\t\t\ttextAlign: 'center',\r\n\t\t\twordBreak: 'break-word',\r\n\t\t\tcolor: theme('text1', t),\r\n\t\t\ttransition: 'background-color 0.25s, border-color 0.25s, color 0.25s',\r\n\t\t\tmarginTop: 0.5,\r\n\t\t},\r\n\t\tdamageContainer: {\r\n\t\t\theight: 18,\r\n\t\t\tdisplay: 'flex',\r\n\t\t\ttransition: 'background-color 0.25s, border-color 0.25s, color 0.25s',\r\n\t\t\tmargin: '0px 20px 20px 20px',\r\n\t\t\tborderRadius: 10,\r\n\t\t\toverflow: 'hidden',\r\n\t\t},\r\n\t\tdamageBarComponent: {\r\n\t\t\tdisplay: 'flex',\r\n\t\t\talignItems: 'center',\r\n\t\t\tjustifyContent: 'center',\r\n\t\t\tpaddingBottom: 2,\r\n\t\t},\r\n\t\tteamSide: {\r\n\t\t\t...FontSize.extraLarge,\r\n\t\t\tfontFamily: 'Alegreya Sans',\r\n\t\t\tfontWeight: 600,\r\n\t\t\ttextAlign: 'center',\r\n\t\t\tmarginTop: 5,\r\n\t\t},\r\n        oddsOfWinning: {\r\n            ...FontSize.medium,\r\n\t\t\ttextAlign: 'center',\r\n\t\t\tmarginBottom: 5,\r\n        },\r\n\t\tinfoBoxContainer: {\r\n\t\t\tposition: 'absolute',\r\n            minWidth: 225,\r\n\t\t\ttransform: 'translateX(-50%)',\r\n\t\t\talignItems: 'center',\r\n\t\t\tjustifyContent: 'center',\r\n\t\t\tboxShadow: '0px 0px 3px ' + theme('inputHighlight', t, true),\r\n\t\t\tborderRadius: 10,\r\n\t\t},\r\n\t\tinfoBox: {\r\n\t\t\tbackgroundColor: theme('bg1', t),\r\n\t\t\tmaxWidth: 250,\r\n\t\t\tborderRadius: 10,\r\n\t\t\tpadding: 10,\r\n\t\t\tborderColor: theme('inputHighlight', t, true),\r\n\t\t\ttransition: 'background-color 0.25s, border-color 0.25s, color 0.25s',\r\n\t\t\tborderStyle: 'solid',\r\n\t\t\tborderWidth: 2,\r\n\t\t\tcolor: theme('text1', t),\r\n            display: 'flex',\r\n            flex: 1,\r\n            justifyContent: 'center',\r\n\t\t},\r\n\t});\r\n}\r\n\r\n\r\nexport default withRouter(Tiltseek);\r\n","C:\\Users\\Dimitrie\\Documents\\Dimitrie\\Tiltseeker\\Tiltseeker_v2.0\\tiltseeker\\src\\pages\\CompChecker.js",["106","107","108","109","110","111","112","113","114","115","116","117"],"C:\\Users\\Dimitrie\\Documents\\Dimitrie\\Tiltseeker\\Tiltseeker_v2.0\\tiltseeker\\src\\components\\ProgressBar.js",["118","119","120","121"],"import React from 'react'\r\nimport { StyleSheet, css } from 'aphrodite';\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\n\r\nimport { FontSize, theme } from './../Styling.js';\r\n\r\n\r\nclass ProgressBar extends React.Component {\r\n\r\n\tconstructor(props) {\r\n\t\tsuper(props)\r\n\t}\r\n\r\n\trender() {\r\n\t\tloadStyles(this.props.theme)\r\n\t\treturn (\r\n\t\t\t<div className={css(styles.progressBarContainer)}>\r\n\t\t\t\t<div className={css(styles.progressBar)} style={{ width: this.props.percent*100 + '%' }}/>\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\n\r\n\r\nvar styles = null;\r\n\r\nvar loadStyles = (t) => {\r\n\tstyles = StyleSheet.create({\r\n\t\tprogressBarContainer: {\r\n\t\t\tbackgroundColor: theme('primary1', t),\r\n\t\t\ttransition: 'background-color 0.25s, color 0.25s',\r\n\t\t\twidth: '80%',\r\n\t\t\theight: 20,\r\n\t\t\tborderRadius: 10,\r\n\t\t\tpadding: 10,\r\n\t\t},\r\n\t\tprogressBar: {\r\n\t\t\tbackgroundColor: theme('text1', t),\r\n\t\t\ttransition: 'background-color 0.25s, color 0.25s, width 0.5s ease-out',\r\n\t\t\theight: '100%',\r\n\t\t\tborderRadius: 5,\r\n\t\t},\r\n\t});\r\n}\r\n\r\n\r\nexport default ProgressBar;\r\n","C:\\Users\\Dimitrie\\Documents\\Dimitrie\\Tiltseeker\\Tiltseeker_v2.0\\tiltseeker\\src\\Styling.js",["122"],"\nconst themes = {\n\tbg1: {\n\t\tlight: '#BBB',\n\t\tdark: '#686868',\n\t},\n\tprimary1: {\n\t\tlight: '#DDD',\n\t\tdark: '#333',\n\t},\n\tprimary2: {\n\t\tlight: '#D4D4D4',\n\t\tdark: '#3B3B3B',\n\t},\n\taccent1: {\n\t\tlight: '#BBB',\n\t\tdark: '#555',\n\t},\n\taccent2: {\n\t\tlight: '#C8C8C8',\n\t\tdark: '#181818',\n\t},\n\taccent3: {\n\t\tlight: '#2898fa',\n\t\tdark: '#2898fa',\n\t},\n\taccent4: {\n\t\tlight: '#fa3232',\n\t\tdark: '#fa3232',\n\t},\n\tinputHighlight: {\n\t\tlight: '#C8C8C8',\n\t\tdark: 'black',\n\t},\n\tinputHighlight2: {\n\t\tlight: '#EEE',\n\t\tdark: 'black',\n\t},\n\tbutton: {\n\t\tlight: '#AAA',\n\t\tdark: '#888',\n\t},\n\tbuttonAccent: {\n\t\tlight: 'white',\n\t\tdark: '#DDD',\n\t},\n\tbuttonHovered: {\n\t\tlight: '#EEE',\n\t\tdark: '#555',\n\t},\n\tbuttonHoveredAccent: {\n\t\tlight: '#EEE',\n\t\tdark: '#EEE',\n\t},\n\tbuttonPressed: {\n\t\tlight: 'white',\n\t\tdark: '#222',\n\t},\n\tinputHighlightBackground: {\n\t\tlight: '#EAEAEA',\n\t\tdark: '#333',\n\t},\n\ttext1: {\n\t\tlight: '#0C0C0C',\n\t\tdark: '#F3F3F3',\n\t},\n\ttext2: {\n\t\tlight: 'white',\n\t\tdark: 'black',\n\t}\n}\n\nconst FontSize = {\n\tsmall: {\n\t\tfontSize: 8,\n\t\t'@media (min-width: 600px)': {\n\t\t\tfontSize: 10,\n\t\t},\n\t\t'@media (min-width: 800px)': {\n\t\t\tfontSize: 12,\n\t\t},\n\t\t'@media (min-width: 1000px)': {\n\t\t\tfontSize: 13,\n\t\t},\n\t},\n\tmediumSmall: {\n\t\tfontSize: 8,\n\t\t'@media (min-width: 600px)': {\n\t\t\tfontSize: 12,\n\t\t},\n\t\t'@media (min-width: 800px)': {\n\t\t\tfontSize: 14,\n\t\t},\n\t\t'@media (min-width: 1000px)': {\n\t\t\tfontSize: 16,\n\t\t},\n\t},\n\tmedium: {\n\t\tfontSize: 12,\n\t\t'@media (min-width: 600px)': {\n\t\t\tfontSize: 15,\n\t\t},\n\t\t'@media (min-width: 800px)': {\n\t\t\tfontSize: 18,\n\t\t},\n\t\t'@media (min-width: 1000px)': {\n\t\t\tfontSize: 21,\n\t\t},\n\t},\n\tmediumLarge: {\n\t\tfontSize: 15,\n\t\t'@media (min-width: 600px)': {\n\t\t\tfontSize: 18,\n\t\t},\n\t\t'@media (min-width: 800px)': {\n\t\t\tfontSize: 21,\n\t\t},\n\t\t'@media (min-width: 1000px)': {\n\t\t\tfontSize: 23,\n\t\t},\n\t},\n\tlarge: {\n\t\tfontSize: 18,\n\t\t'@media (min-width: 600px)': {\n\t\t\tfontSize: 21,\n\t\t},\n\t\t'@media (min-width: 800px)': {\n\t\t\tfontSize: 24,\n\t\t},\n\t\t'@media (min-width: 1000px)': {\n\t\t\tfontSize: 27,\n\t\t},\n\t},\n\textraLarge: {\n\t\tfontSize: 22,\n\t\t'@media (min-width: 600px)': {\n\t\t\tfontSize: 25,\n\t\t},\n\t\t'@media (min-width: 800px)': {\n\t\t\tfontSize: 29,\n\t\t},\n\t\t'@media (min-width: 1000px)': {\n\t\t\tfontSize: 32,\n\t\t},\n\t},\n\tlogo: {\n\t\tfontSize: 70,\n\t\t'@media (min-width: 600px)': {\n\t\t\tfontSize: 100,\n\t\t},\n\t\t'@media (min-width: 800px)': {\n\t\t\tfontSize: 130,\n\t\t},\n\t\t'@media (min-width: 1000px)': {\n\t\t\tfontSize: 160,\n\t\t},\n\t},\n};\n\nconst InputSize = {\n\tsmall: {\n\t\theight: 20,\n\t\t'@media (min-width: 600px)': {\n\t\t\theight: 20,\n\t\t},\n\t\t'@media (min-width: 800px)': {\n\t\t\theight: 20,\n\t\t},\n\t\t'@media (min-width: 1000px)': {\n\t\t\theight: 20,\n\t\t},\n\t},\n\tmedium: {\n\t\tfontSize: 12,\n\t\t'@media (min-width: 600px)': {\n\t\t\tfontSize: 15,\n\t\t},\n\t\t'@media (min-width: 800px)': {\n\t\t\tfontSize: 18,\n\t\t},\n\t\t'@media (min-width: 1000px)': {\n\t\t\tfontSize: 21,\n\t\t},\n\t},\n\tmediumLarge: {\n\t\tfontSize: 15,\n\t\t'@media (min-width: 600px)': {\n\t\t\tfontSize: 18,\n\t\t},\n\t\t'@media (min-width: 800px)': {\n\t\t\tfontSize: 21,\n\t\t},\n\t\t'@media (min-width: 1000px)': {\n\t\t\tfontSize: 23,\n\t\t},\n\t},\n\tlarge: {\n\t\tfontSize: 18,\n\t\t'@media (min-width: 600px)': {\n\t\t\tfontSize: 21,\n\t\t},\n\t\t'@media (min-width: 800px)': {\n\t\t\tfontSize: 24,\n\t\t},\n\t\t'@media (min-width: 1000px)': {\n\t\t\tfontSize: 27,\n\t\t},\n\t},\n\tlogo: {\n\t\tfontSize: 70,\n\t\t'@media (min-width: 600px)': {\n\t\t\tfontSize: 100,\n\t\t},\n\t\t'@media (min-width: 800px)': {\n\t\t\tfontSize: 130,\n\t\t},\n\t\t'@media (min-width: 1000px)': {\n\t\t\tfontSize: 160,\n\t\t},\n\t},\n};\n\nconst ItemSize = {\n\tlarge: {\n\t\tminWidth: '90%',\n\t\t'@media (min-width: 1100px)': {\n\t\t\tminWidth: '80%',\n\t\t},\n\t\t'@media (min-width: 1350px)': {\n\t\t\tminWidth: '45%',\n\t\t\tmaxWidth: '45%',\n\t\t},\n\t\t'@media (min-width: 1550px)': {\n\t\t\tminWidth: '40%',\n\t\t\tmaxWidth: '40%',\n\t\t},\n\t},\n};\n\nconst theme = (key, type, invert=false) => {\n\tif (!invert) {\n\t\treturn themes[key][type]\n\t}\telse {\n\t\treturn themes[key][type === 'dark' ? 'light' : 'dark']\n\t}\n}\n\nexport { theme, FontSize, ItemSize }\n","C:\\Users\\Dimitrie\\Documents\\Dimitrie\\Tiltseeker\\Tiltseeker_v2.0\\tiltseeker\\src\\utils\\WinRateCalc.js",["123","124","125","126","127","128","129","130","131","132","133","134","135","136","137","138","139","140","141","142","143","144","145","146","147"],"\r\nclass WinRateCalc {\r\n\r\n\tstatic normalize(x) {\r\n\t\treturn x / ( 1 + Math.abs( 5 * x ) ) + 0.5\r\n\t}\r\n\r\n\tstatic calcProbability(picksAndBans, stats, compensateForWinrate) {\r\n\t\tvar { champStats, matchups } = stats\r\n\r\n\t\tvar teamChamps = Object.values(picksAndBans.allyTeam.picks).map(pick => {\r\n\t\t\treturn pick.championId\r\n\t\t})\r\n\r\n\t\tvar opponentChamps = Object.values(picksAndBans.opponentTeam.picks).map(pick => {\r\n\t\t\treturn pick.championId\r\n\t\t})\r\n\r\n\t\tvar probabilities = []\r\n\t\tvar totalSamples = 0\r\n\r\n\t\tvar minimumSamples = 1000\r\n\r\n\t\tfor (var [i, champA] of teamChamps.entries()) {\r\n\t\t\tfor (var champB of teamChamps.slice(i + 1)) {\r\n\t\t\t\tvar [a, b] = [champA, champB].sort((a, b) => a - b)\r\n\r\n\t\t\t\tvar wins = matchups[`${a}w${b}`]\r\n\t\t\t\tvar total = matchups[`${a}w${b}_total`]\r\n\r\n\t\t\t\tif (total > minimumSamples) {\r\n\t\t\t\t\ttotalSamples += total\r\n\t\t\t\t\tvar probability = wins/total\r\n\r\n\t\t\t\t\tif (compensateForWinrate) {\r\n\t\t\t\t\t\tvar champAWinRate = matchups[`${a}w${a}`]/matchups[`${a}w${a}_total`]\r\n\t\t\t\t\t\tvar champBWinRate = matchups[`${b}w${b}`]/matchups[`${b}w${b}_total`]\r\n\t\t\t\t\t\tvar avgWinRate = champAWinRate + champBWinRate - 1\r\n\r\n\t\t\t\t\t\tprobability -= avgWinRate\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tprobabilities.push(probability)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfor (var [i, champA] of opponentChamps.entries()) {\r\n\t\t\tfor (var champB of opponentChamps.slice(i + 1)) {\r\n\t\t\t\tvar [a, b] = [champA, champB].sort((a, b) => a - b)\r\n\r\n\t\t\t\tvar wins = matchups[`${a}w${b}`]\r\n\t\t\t\tvar total = matchups[`${a}w${b}_total`]\r\n\r\n\t\t\t\tif (total > minimumSamples) {\r\n\t\t\t\t\ttotalSamples += total\r\n\t\t\t\t\tvar probability = wins/total\r\n\t\t\t\t\t\r\n\t\t\t\t\tif (compensateForWinrate) {\r\n\t\t\t\t\t\tvar champAWinRate = matchups[`${a}w${a}`]/matchups[`${a}w${a}_total`]\r\n\t\t\t\t\t\tvar champBWinRate = matchups[`${b}w${b}`]/matchups[`${b}w${b}_total`]\r\n\t\t\t\t\t\tvar avgWinRate = champAWinRate + champBWinRate - 1\r\n\r\n\t\t\t\t\t\tprobability -= avgWinRate\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tprobabilities.push(1-probability)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfor (var champA of teamChamps) {\r\n\t\t\tfor (var champB of opponentChamps) {\r\n\t\t\t\tvar [a, b] = [champA, champB].sort((a, b) => a - b)\r\n\r\n\t\t\t\tvar wins = matchups[`${a}v${b}`]\r\n\t\t\t\tvar total = matchups[`${a}v${b}_total`]\r\n\r\n\t\t\t\tif (total > minimumSamples) {\r\n\t\t\t\t\ttotalSamples += total\r\n\t\t\t\t\tvar probability = a == champA ? wins/total : 1 - wins/total\r\n\t\t\t\t\t\r\n\t\t\t\t\tif (compensateForWinrate) {\r\n\t\t\t\t\t\tvar champAWinRateUncorrected = matchups[`${a}w${a}`]/matchups[`${a}w${a}_total`]\r\n\t\t\t\t\t\tvar champAWinRate = a == champA ? champAWinRateUncorrected : 1 - champAWinRateUncorrected\r\n\t\t\t\t\t\tvar champBWinRateUncorrected = matchups[`${b}w${b}`]/matchups[`${b}w${b}_total`]\r\n\t\t\t\t\t\tvar champBWinRate = a == champA ? 1 - champBWinRateUncorrected : champBWinRateUncorrected\r\n\t\t\t\t\t\tvar avgWinRate = champAWinRate + champBWinRate - 1\r\n\r\n\t\t\t\t\t\tprobability -= avgWinRate\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tprobabilities.push(probability)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tprobabilities = probabilities.filter(val => !isNaN(val))\r\n\r\n\t\t// console.log(probabilities.reduce((a,b) => a + (b - 0.5), 0))\r\n\t\t// console.log(probabilities)\r\n\t\treturn {\r\n\t\t\t// probability: probabilities.reduce((a,b) => a + b, 0)/probabilities.length,\r\n\t\t\tprobability: this.normalize(probabilities.reduce((a,b) => a + (b - 0.5), 0) / ( ( teamChamps.length + opponentChamps.length ) / 2 ) ),\r\n\t\t\ttotalSamples: totalSamples,\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tstatic getWinRate(picksAndBans, stats, localPlayerCellId, potentialPicks, compensateForWinrate) {\r\n\t\tvar returnObj = {\r\n\t\t\t...this.calcProbability(picksAndBans, stats, compensateForWinrate),\r\n\t\t\toptions: {}\r\n\t\t}\r\n\t\tconsole.log(picksAndBans)\r\n\t\tconsole.log(returnObj.probability)\r\n\r\n\t\tpotentialPicks.forEach(champId => {\r\n\t\t\tvar modifiedPicksAndBans = JSON.parse(JSON.stringify(picksAndBans)) // the JSON stuff quickly makes a deep copy\r\n\t\t\tmodifiedPicksAndBans.allyTeam.picks[localPlayerCellId] = {\r\n\t\t\t\tchampionId: champId,\r\n\t\t\t\tcompleted: false,\r\n\t\t\t}\r\n\t\t\treturnObj.options[champId] = this.calcProbability(modifiedPicksAndBans, stats, compensateForWinrate)\r\n\t\t})\r\n\r\n\t\treturn returnObj\r\n\t}\r\n}\r\n\r\nexport default WinRateCalc","C:\\Users\\Dimitrie\\Documents\\Dimitrie\\Tiltseeker\\Tiltseeker_v2.0\\tiltseeker\\src\\GlobalContext.js",[],{"ruleId":"148","replacedBy":"149"},{"ruleId":"150","replacedBy":"151"},{"ruleId":"152","severity":1,"message":"153","line":54,"column":30,"nodeType":"154","messageId":"155","endLine":54,"endColumn":32},{"ruleId":"156","severity":1,"message":"157","line":16,"column":13,"nodeType":"158","messageId":"159","endLine":16,"endColumn":18},{"ruleId":"156","severity":1,"message":"160","line":5,"column":10,"nodeType":"158","messageId":"159","endLine":5,"endColumn":18},{"ruleId":"161","severity":1,"message":"162","line":54,"column":35,"nodeType":"163","endLine":54,"endColumn":37,"suggestions":"164"},{"ruleId":"165","severity":1,"message":"166","line":66,"column":37,"nodeType":"167","endLine":66,"endColumn":179},{"ruleId":"156","severity":1,"message":"168","line":7,"column":8,"nodeType":"158","messageId":"159","endLine":7,"endColumn":18},{"ruleId":"169","severity":1,"message":"170","line":32,"column":6,"nodeType":"167","endLine":32,"endColumn":201},{"ruleId":"156","severity":1,"message":"168","line":7,"column":8,"nodeType":"158","messageId":"159","endLine":7,"endColumn":18},{"ruleId":"156","severity":1,"message":"171","line":8,"column":8,"nodeType":"158","messageId":"159","endLine":8,"endColumn":18},{"ruleId":"152","severity":1,"message":"172","line":10,"column":49,"nodeType":"154","messageId":"155","endLine":10,"endColumn":51},{"ruleId":"152","severity":1,"message":"172","line":57,"column":31,"nodeType":"154","messageId":"155","endLine":57,"endColumn":33},{"ruleId":"156","severity":1,"message":"173","line":38,"column":20,"nodeType":"158","messageId":"159","endLine":38,"endColumn":28},{"ruleId":"152","severity":1,"message":"172","line":186,"column":19,"nodeType":"154","messageId":"155","endLine":186,"endColumn":21},{"ruleId":"161","severity":1,"message":"174","line":204,"column":12,"nodeType":"163","endLine":204,"endColumn":14,"suggestions":"175"},{"ruleId":"152","severity":1,"message":"172","line":209,"column":27,"nodeType":"154","messageId":"155","endLine":209,"endColumn":29},{"ruleId":"152","severity":1,"message":"172","line":220,"column":27,"nodeType":"154","messageId":"155","endLine":220,"endColumn":29},{"ruleId":"152","severity":1,"message":"172","line":223,"column":27,"nodeType":"154","messageId":"155","endLine":223,"endColumn":29},{"ruleId":"156","severity":1,"message":"176","line":250,"column":13,"nodeType":"158","messageId":"159","endLine":250,"endColumn":18},{"ruleId":"156","severity":1,"message":"177","line":250,"column":20,"nodeType":"158","messageId":"159","endLine":250,"endColumn":28},{"ruleId":"152","severity":1,"message":"172","line":325,"column":35,"nodeType":"154","messageId":"155","endLine":325,"endColumn":37},{"ruleId":"152","severity":1,"message":"153","line":345,"column":12,"nodeType":"154","messageId":"155","endLine":345,"endColumn":14},{"ruleId":"152","severity":1,"message":"153","line":345,"column":27,"nodeType":"154","messageId":"155","endLine":345,"endColumn":29},{"ruleId":"156","severity":1,"message":"178","line":386,"column":27,"nodeType":"158","messageId":"159","endLine":386,"endColumn":36},{"ruleId":"165","severity":1,"message":"166","line":463,"column":6,"nodeType":"167","endLine":471,"endColumn":8},{"ruleId":"152","severity":1,"message":"172","line":507,"column":39,"nodeType":"154","messageId":"155","endLine":507,"endColumn":41},{"ruleId":"152","severity":1,"message":"172","line":526,"column":95,"nodeType":"154","messageId":"155","endLine":526,"endColumn":97},{"ruleId":"156","severity":1,"message":"178","line":537,"column":31,"nodeType":"158","messageId":"159","endLine":537,"endColumn":40},{"ruleId":"152","severity":1,"message":"172","line":565,"column":51,"nodeType":"154","messageId":"155","endLine":565,"endColumn":53},{"ruleId":"152","severity":1,"message":"172","line":579,"column":45,"nodeType":"154","messageId":"155","endLine":579,"endColumn":47},{"ruleId":"152","severity":1,"message":"172","line":589,"column":63,"nodeType":"154","messageId":"155","endLine":589,"endColumn":65},{"ruleId":"152","severity":1,"message":"172","line":640,"column":52,"nodeType":"154","messageId":"155","endLine":640,"endColumn":54},{"ruleId":"152","severity":1,"message":"172","line":643,"column":52,"nodeType":"154","messageId":"155","endLine":643,"endColumn":54},{"ruleId":"156","severity":1,"message":"179","line":7,"column":20,"nodeType":"158","messageId":"159","endLine":7,"endColumn":28},{"ruleId":"152","severity":1,"message":"172","line":63,"column":34,"nodeType":"154","messageId":"155","endLine":63,"endColumn":36},{"ruleId":"180","severity":1,"message":"181","line":94,"column":8,"nodeType":"182","messageId":"183","endLine":108,"endColumn":9},{"ruleId":"152","severity":1,"message":"172","line":102,"column":89,"nodeType":"154","messageId":"155","endLine":102,"endColumn":91},{"ruleId":"152","severity":1,"message":"172","line":116,"column":23,"nodeType":"154","messageId":"155","endLine":116,"endColumn":25},{"ruleId":"152","severity":1,"message":"172","line":119,"column":18,"nodeType":"154","messageId":"155","endLine":119,"endColumn":20},{"ruleId":"152","severity":1,"message":"172","line":148,"column":39,"nodeType":"154","messageId":"155","endLine":148,"endColumn":41},{"ruleId":"152","severity":1,"message":"172","line":162,"column":32,"nodeType":"154","messageId":"155","endLine":162,"endColumn":34},{"ruleId":"152","severity":1,"message":"172","line":176,"column":44,"nodeType":"154","messageId":"155","endLine":176,"endColumn":46},{"ruleId":"152","severity":1,"message":"172","line":185,"column":49,"nodeType":"154","messageId":"155","endLine":185,"endColumn":51},{"ruleId":"165","severity":1,"message":"166","line":189,"column":16,"nodeType":"167","endLine":189,"endColumn":169},{"ruleId":"152","severity":1,"message":"172","line":205,"column":41,"nodeType":"154","messageId":"155","endLine":205,"endColumn":43},{"ruleId":"156","severity":1,"message":"184","line":3,"column":10,"nodeType":"158","messageId":"159","endLine":3,"endColumn":20},{"ruleId":"156","severity":1,"message":"185","line":4,"column":10,"nodeType":"158","messageId":"159","endLine":4,"endColumn":25},{"ruleId":"156","severity":1,"message":"160","line":6,"column":10,"nodeType":"158","messageId":"159","endLine":6,"endColumn":18},{"ruleId":"186","severity":1,"message":"187","line":11,"column":2,"nodeType":"188","messageId":"189","endLine":13,"endColumn":3},{"ruleId":"156","severity":1,"message":"190","line":160,"column":7,"nodeType":"158","messageId":"159","endLine":160,"endColumn":16},{"ruleId":"156","severity":1,"message":"191","line":9,"column":9,"nodeType":"158","messageId":"159","endLine":9,"endColumn":19},{"ruleId":"192","severity":1,"message":"193","line":48,"column":13,"nodeType":"158","messageId":"194","endLine":48,"endColumn":14},{"ruleId":"192","severity":1,"message":"195","line":48,"column":16,"nodeType":"158","messageId":"194","endLine":48,"endColumn":22},{"ruleId":"192","severity":1,"message":"196","line":49,"column":13,"nodeType":"158","messageId":"194","endLine":49,"endColumn":19},{"ruleId":"192","severity":1,"message":"197","line":50,"column":10,"nodeType":"158","messageId":"194","endLine":50,"endColumn":11},{"ruleId":"192","severity":1,"message":"198","line":50,"column":13,"nodeType":"158","messageId":"194","endLine":50,"endColumn":14},{"ruleId":"192","severity":1,"message":"199","line":52,"column":9,"nodeType":"158","messageId":"194","endLine":52,"endColumn":13},{"ruleId":"192","severity":1,"message":"200","line":53,"column":9,"nodeType":"158","messageId":"194","endLine":53,"endColumn":14},{"ruleId":"192","severity":1,"message":"201","line":57,"column":10,"nodeType":"158","messageId":"194","endLine":57,"endColumn":21},{"ruleId":"192","severity":1,"message":"202","line":60,"column":11,"nodeType":"158","messageId":"194","endLine":60,"endColumn":24},{"ruleId":"192","severity":1,"message":"203","line":61,"column":11,"nodeType":"158","messageId":"194","endLine":61,"endColumn":24},{"ruleId":"192","severity":1,"message":"204","line":62,"column":11,"nodeType":"158","messageId":"194","endLine":62,"endColumn":21},{"ruleId":"192","severity":1,"message":"195","line":72,"column":12,"nodeType":"158","messageId":"194","endLine":72,"endColumn":18},{"ruleId":"192","severity":1,"message":"196","line":73,"column":13,"nodeType":"158","messageId":"194","endLine":73,"endColumn":19},{"ruleId":"192","severity":1,"message":"197","line":74,"column":10,"nodeType":"158","messageId":"194","endLine":74,"endColumn":11},{"ruleId":"192","severity":1,"message":"198","line":74,"column":13,"nodeType":"158","messageId":"194","endLine":74,"endColumn":14},{"ruleId":"192","severity":1,"message":"199","line":76,"column":9,"nodeType":"158","messageId":"194","endLine":76,"endColumn":13},{"ruleId":"192","severity":1,"message":"200","line":77,"column":9,"nodeType":"158","messageId":"194","endLine":77,"endColumn":14},{"ruleId":"192","severity":1,"message":"201","line":81,"column":10,"nodeType":"158","messageId":"194","endLine":81,"endColumn":21},{"ruleId":"152","severity":1,"message":"172","line":81,"column":26,"nodeType":"154","messageId":"155","endLine":81,"endColumn":28},{"ruleId":"192","severity":1,"message":"202","line":85,"column":11,"nodeType":"158","messageId":"194","endLine":85,"endColumn":24},{"ruleId":"152","severity":1,"message":"172","line":85,"column":29,"nodeType":"154","messageId":"155","endLine":85,"endColumn":31},{"ruleId":"192","severity":1,"message":"203","line":87,"column":11,"nodeType":"158","messageId":"194","endLine":87,"endColumn":24},{"ruleId":"152","severity":1,"message":"172","line":87,"column":29,"nodeType":"154","messageId":"155","endLine":87,"endColumn":31},{"ruleId":"192","severity":1,"message":"204","line":88,"column":11,"nodeType":"158","messageId":"194","endLine":88,"endColumn":21},"no-native-reassign",["205"],"no-negated-in-lhs",["206"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","no-unused-vars","'axios' is assigned a value but never used.","Identifier","unusedVar","'FontSize' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'calcData'. Either include it or remove the dependency array.","ArrayExpression",["207"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'profilePic' is defined but never used.","jsx-a11y/iframe-has-title","<iframe> elements must have a unique title property.","'axiosRetry' is defined but never used.","Expected '===' and instead saw '=='.","'setQuote' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'fetchData'. Either include it or remove the dependency array.",["208"],"'teams' is assigned a value but never used.","'setTeams' is assigned a value but never used.","'playerNum' is assigned a value but never used.","'ItemSize' is defined but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","'withRouter' is defined but never used.","'FontAwesomeIcon' is defined but never used.","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","'InputSize' is assigned a value but never used.","'champStats' is assigned a value but never used.","no-redeclare","'i' is already defined.","redeclared","'champA' is already defined.","'champB' is already defined.","'a' is already defined.","'b' is already defined.","'wins' is already defined.","'total' is already defined.","'probability' is already defined.","'champAWinRate' is already defined.","'champBWinRate' is already defined.","'avgWinRate' is already defined.","no-global-assign","no-unsafe-negation",{"desc":"209","fix":"210"},{"desc":"211","fix":"212"},"Update the dependencies array to be: [calcData]",{"range":"213","text":"214"},"Update the dependencies array to be: [fetchData]",{"range":"215","text":"216"},[2168,2170],"[calcData]",[8932,8934],"[fetchData]"]